# View each selected Sound (and TextGrid) object in turn
#
# The script allows for easy navigation between selected Sound
# objects, which is particularly useful when comparing specific
# features in each of them. If an equal number of TextGrid and
# Sound objects have been selected, they will be paired by name
# and viewed in unison.
#
# Written by Jose J. Atria (October 14, 2012)
# Last revision: July 10, 2014)
#
# This script is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# A copy of the GNU General Public License is available at
# <http://www.gnu.org/licenses/>.

procedure for_each.action ()
  if numberOfSelected()
    @has_editor()
    if has_editor.editor
      do(has_editor.command$)
      editor: has_editor.editor
        .editor$ = Editor info
      endeditor

      .name$ = extractLine$(.editor$, "Editor name: ")
      .name$ = mid$(.name$, rindex(.name$, " "), length(.name$))

      beginPause: "Viewing " + .name$ + " " +  "(" +
        ... string$(for_each.item) + " of " +
        ... string$(for_each.total_items) + ")"

      if for_each.item > 1
        .button = endPause: "Stop", "Previous", if for_each.item = for_each.total_items then
          ... "Finish" else "Next" fi, 3, 1
      else
        .button = endPause: "Stop", if for_each.item = for_each.total_items then
          ... "Finish" else "Next" fi, 2, 1
      endif

      if .button = 1
        # Pressed stop
        for_each.next = 0
      elsif .button = 2 and for_each.item > 1
        # Pressed back
        for_each.next = -1
      else
        # Pressed forward
        for_each.next = if for_each.item = for_each.total_items then 0 else 1 fi
      endif

      nocheck editor: has_editor.editor
        nocheck Close
      nocheck endeditor
    endif
  endif
endproc

include ../procedures/for_each.proc
procedure view_each ()
  @for_each()
endproc

procedure has_editor ()
  .command$ = "View & Edit"
  @_try_editor: .command$
  if '_try_editor.return'
    .command$ = "Edit"
    @_try_editor: .command$
  endif
  .editor = '_try_editor.return'
endproc

procedure _try_editor: .command$
  nocheck do(.command$)
  for .i to numberOfSelected()
    nocheck editor: selected(.i)
      .editor$ = nocheck Editor info
      nocheck Close
    nocheck endeditor
    .return = if .editor$ = "" then 0 else selected(.i) fi
  endfor
endproc
